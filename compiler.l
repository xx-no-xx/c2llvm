D			[0-9]
L			[a-zA-Z_]
H			[a-fA-F0-9]
E			[Ee][+-]?{D}+
FS			(f|F|l|L)
IS			(u|U|l|L)* 


/* 上方是一些便于正则表达式的定义，D指数字，L指字母？，H指十六进制可能用到的东西，E指表达式，其余含义不明*/
/* TODO: 处于不明原因对其保留, 后续需要修改 */

%{
#include <stdio.h> // 因为在此处使用了printf
#include "y.tab.h" // generated by YACC
using namespace std;

void testonly();
%}

%%

"int"			{ testonly(); yylval.type = (char*)("int_type"); yylval.number = 123123; return INT; } // 匹配"int", 每个匹配需要返回一个标识符，标识符会被随机分配一个int，
{D}+{IS}? { printf("CONSTANT:%s\n", yytext); yylval.type = (char*)("constant_type"); return CONSTANT; } // 匹配一个十进制数（这个匹配可能是有问题的） . 在{}里写操作。
"tni"     { yylval.number = 321321; return INT; }

%%

void testonly(void) {
	printf("INT:%s\n", yytext);
	return;
}

int yywrap(void) {
	return 1;
}
